<%- include('../partials/header', { page: 'purchases', pageGroup: 'purchases' }) %>

<div class="container mt-5 fade-in">
    <h1 class="mb-4"><i class="bi bi-plus-circle"></i> Ajouter un achat</h1>

    <% if (successMessage && successMessage.length > 0) { %>
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <%= successMessage[0] %>
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
    <% } %>

    <% if (successMessage && successMessage.length > 0) { %>
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <%= successMessage[0] %>
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
    <% } %>

    <form action="/purchases/add" method="POST">
        <div class="input-group">
            <select name="supplier_id" id="supplier_id" class="form-select" required>
                <option value="">-- Sélectionner --</option>
                <% suppliers.forEach(s => { %>
                    <option value="<%= s.id %>"><%= s.name %></option>
                <% }) %>
            </select>
            <button type="button" class="btn btn-outline-primary" data-bs-toggle="offcanvas" data-bs-target="#addSupplierDrawer">
                <i class="bi bi-plus-circle"></i>
            </button>
        </div>
        

        <h4 class="mt-4">Produits</h4>
        <table class="table table-bordered" id="productsTable">
            <thead>
                <tr>
                    <th>Produit</th>
                    <th>Quantité</th>
                    <th>Prix unitaire</th>
                    <th>Remise (%)</th>
                    <th>Taxe (%)</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <select name="items[0][product_id]" class="form-select" required>
                            <option value="">-- Produit --</option>
                            <% products.forEach(p => { %>
                                <option value="<%= p.id %>"><%= p.nom %></option>
                            <% }) %>
                        </select>
                    </td>
                    <td><input type="number" name="items[0][quantity]" class="form-control" required></td>
                    <td><input type="number" step="0.01" name="items[0][unit_price]" class="form-control" required></td>
                    <td><input type="number" step="0.01" name="items[0][discount]" class="form-control" value="0"></td>
                    <td><input type="number" step="0.01" name="items[0][tax]" class="form-control" value="0"></td>
                    <td><button type="button" class="btn btn-danger btn-sm remove-row"><i class="bi bi-trash"></i></button></td>
                </tr>
            </tbody>
        </table>

        <button type="button" class="btn btn-secondary" id="addRow"><i class="bi bi-plus-lg"></i> Ajouter un produit</button>

        <div class="row mt-4">
            <div class="col-md-6">
                <label for="global_discount" class="form-label">Remise globale (%)</label>
                <input type="number" step="0.01" name="global_discount" id="global_discount" class="form-control" value="0">
            </div>
            <div class="col-md-6">
                <label for="global_tax" class="form-label">Taxe globale (%)</label>
                <input type="number" step="0.01" name="global_tax" id="global_tax" class="form-control" value="0">
            </div>
        </div>

        <button type="submit" class="btn btn-success mt-4"><i class="bi bi-check-circle"></i> Enregistrer l'achat</button>
        <a href="/purchases" class="btn btn-secondary mt-4">Retour</a>
    </form>
</div>

<!-- Drawer Ajout Fournisseur -->
<div class="offcanvas offcanvas-end" tabindex="-1" id="addSupplierDrawer">
    <div class="offcanvas-header">
      <h5 class="offcanvas-title"><i class="bi bi-truck"></i> Ajouter un Fournisseur</h5>
      <button type="button" class="btn-close" data-bs-dismiss="offcanvas"></button>
    </div>
    <div class="offcanvas-body">
      <form id="addSupplierForm" action="/suppliers/add" method="POST">
        <div class="mb-3">
          <label class="form-label fw-bold">Nom *</label>
          <input type="text" name="name" class="form-control" required>
        </div>
        <div class="mb-3">
          <label class="form-label fw-bold">Contact</label>
          <input type="text" name="contact" class="form-control">
        </div>
        <div class="mb-3">
          <label class="form-label fw-bold">Téléphone</label>
          <input type="text" name="phone" class="form-control">
        </div>
        <div class="mb-3">
          <label class="form-label fw-bold">Email</label>
          <input type="email" name="email" class="form-control">
        </div>
        <button type="submit" class="btn btn-primary custom-button">
          <i class="bi bi-save-fill"></i> Enregistrer
        </button>
      </form>
    </div>
</div>
  

<script>
    document.getElementById('addSupplierForm').addEventListener('submit', function(e) {
    e.preventDefault();

    const form = e.target;

    const payload = {
        name: form.name.value,
        contact: form.contact.value,
        phone: form.phone.value,
        email: form.email.value
    };

    fetch('/suppliers/add', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'  // ✅ très important pour que req.headers.accept.indexOf('json') fonctionne !
        },
        body: JSON.stringify(payload)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            const supplierSelect = document.getElementById('supplier_id');
            const option = document.createElement('option');
            option.value = data.supplier.id;
            option.text = data.supplier.name;
            option.selected = true;

            supplierSelect.appendChild(option);

            const offcanvasEl = document.getElementById('addSupplierDrawer');
            const offcanvas = bootstrap.Offcanvas.getInstance(offcanvasEl);
            offcanvas.hide();

            form.reset();
            alert('✅ Fournisseur ajouté et sélectionné.');
        } else {
            alert('Erreur lors de l\'ajout du fournisseur.');
        }
    })
    .catch(error => {
        console.error('Erreur:', error);
        alert('Erreur lors de l\'ajout du fournisseur.');
    });
});

</script>
    
    

<%- include('../partials/footer') %>

<script>
    let rowIndex = 1;

    document.getElementById('addRow').addEventListener('click', () => {
        const table = document.getElementById('productsTable').getElementsByTagName('tbody')[0];
        const newRow = table.insertRow();

        newRow.innerHTML = `
            <td>
                <select name="items[${rowIndex}][product_id]" class="form-select" required>
                    <option value="">-- Produit --</option>
                    <% products.forEach(p => { %>
                        <option value="<%= p.id %>"><%= p.nom %></option>
                    <% }) %>
                </select>
            </td>
            <td><input type="number" name="items[${rowIndex}][quantity]" class="form-control" required></td>
            <td><input type="number" step="0.01" name="items[${rowIndex}][unit_price]" class="form-control" required></td>
            <td><input type="number" step="0.01" name="items[${rowIndex}][discount]" class="form-control" value="0"></td>
            <td><input type="number" step="0.01" name="items[${rowIndex}][tax]" class="form-control" value="0"></td>
            <td><button type="button" class="btn btn-danger btn-sm remove-row"><i class="bi bi-trash"></i></button></td>
        `;
        rowIndex++;
    });

    // Empêcher la sélection du même produit
    function checkDuplicateProducts() {
        const selects = document.querySelectorAll('select[name*="[product_id]"]');
        const values = Array.from(selects).map(s => s.value).filter(v => v);
        const hasDuplicates = new Set(values).size !== values.length;
        return hasDuplicates;
    }

    document.getElementById('productsTable').addEventListener('change', (e) => {
        if (checkDuplicateProducts()) {
            alert('❌ Le même produit ne peut pas être sélectionné plusieurs fois.');
            e.target.value = '';
        }
    });


    document.getElementById('productsTable').addEventListener('click', (e) => {
        if (e.target && e.target.closest('.remove-row')) {
            const row = e.target.closest('tr');
            row.remove();
        }
    });
</script>
